// NOTES:
// gradle wrapper
// ./gradlew :buckWrapper
// List all buck targets
// ./buckw targets
// # Build a target
// ./buckw build compile
// ./gradlew dependencies --configuration compile
// ./gradlew clean generateLock saveLock
// ./gradlew compileJava
// ./gradlew run
// ./gradlew run --debug-jvm


allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'com.uber.okbuck'
    apply plugin: 'nebula.dependency-lock'
//TODO(gburd): apply plugin: 'docker'

    version = '1.8.0-SNAPSHOT'

    group = 'de.bwaldvogel'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava.options.encoding = 'UTF-8'

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "https://clojars.org/repo" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    configurations.all {
      exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
      exclude group: 'org.hibernate', module: 'hibernate-core'
      exclude group: 'org.slf4j', module: 'slf4j-log4j12'
      exclude group: 'log4j', module: 'log4j'
    }

    dependencies {
        // Dropwizard (aka. CodaHale) Metrics, "Measure all the things!(TM)"
        compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '3.+'

        // Logging for Java, "Visibility proceeds insight(TM)"
        compile group: 'ch.qos.logback', name: 'logback-core', version: '1.+'
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
        compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.+'
        compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.+'

        // Docker
//        classpath 'se.transmode.gradle:gradle-docker:1.2'

        // Testing
        testCompile group: 'junit', name: 'junit', version: '4.+'
        testCompile group: 'org.assertj', name: 'assertj-core', version: '2.+'
        testCompile group: 'org.powermock', name: 'powermock-api-easymock', version: '1.6.+'
        testCompile group: 'org.easymock', name: 'easymockclassextension', version: '3.+'
        testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.+'
        testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '1.+'
        testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
        testCompile group: 'org.quicktheories', name: 'quicktheories', version: '0.+'
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.+'
        testCompile group: 'com.github.javafaker', name: 'javafaker', version: '0.+'
    }

    test {
        systemProperties['io.netty.leakDetectionLevel'] = 'advanced'
    }

}

// https://github.com/bmuschko/gradle-nexus-plugin
buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "https://clojars.org/repo" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.uber:okbuck:0.20.5'
        classpath 'com.netflix.nebula:gradle-dependency-lock-plugin:4.+'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'org.standardout:gradle-versioneye-plugin:1.4.0'
    }
}

ext {
    title = 'mongo-java-server'
    url = 'https://www.github.com/bwaldvogel/mongo-java-server'
}

jar {
    manifest {
        attributes 'Implementation-Title': title, 'Implementation-Version': version
    }
}

allprojects {
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'org.standardout.versioneye'

    def projectName = project.name

    modifyPom {
        project {
            groupId        'de.bwaldvogel'
            artifactId     projectName
            name           title
            description    'Stub implementation of MongoDB in Java that speaks the wire protocol.'
            url            url
            inceptionYear '2012'

            scm {
                url 'git@github.com:bwaldvogel/mongo-java-server.git'
                connection 'scm:git:git@github.com:bwaldvogel/mongo-java-server.git'
                developerConnection 'scm:git:git@github.com:bwaldvogel/mongo-java-server.git'
            }

            licenses {
                license {
                    name 'The BSD License'
                    url 'http://www.opensource.org/licenses/bsd-license.php'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'bwaldvogel'
                    name 'Benedikt Waldvogel'
                    email 'mail@bwaldvogel.de'
                }
                developer {
                    id 'gburd'
                    name 'Greg Burd'
                    email 'greg@burd.me'
                }
            }
        }
    }

    extraArchive {
        sources = true
        tests = false
        javadoc = true
    }

    nexus {
        sign = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

task(run, dependsOn: 'classes', type: JavaExec) {
    main = 'de.bwaldvogel.mongo.InMemoryMongoServer'
    classpath = sourceSets.main.runtimeClasspath

}

dependencies {
    compile project(':mongo-java-server-core')
    compile project(':mongo-java-server-memory-backend')
}

// vim: set ts=4 sw=4 et:
